/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package javar;

import java.awt.Frame;
import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JRootPane;
import javax.swing.KeyStroke;

/**
 *
 * @author Josep
 */
public class JRDialog extends JDialog {

    /**
     * Creates new form JRDialog
     */
    public JRDialog() {
        initComponents();
        this.setModal(true);
        this.setLocationRelativeTo(null);
   }
    
    public JRDialog(Frame frame, boolean modal) {
        super(frame, modal);
        initComponents();
        this.setLocationRelativeTo(null);
    }
  
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables


    @Override
    protected JRootPane createRootPane() {
    JRootPane rootPane2 = new JRootPane();
    KeyStroke stroke = KeyStroke.getKeyStroke("ESCAPE");
    AbstractAction actionListener = new AbstractAction() {
     @Override
      public void actionPerformed(ActionEvent actionEvent) {
        setVisible(false);
      }
    } ;
    InputMap inputMap = rootPane2.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
    inputMap.put(stroke, "ESCAPE");
    rootPane2.getActionMap().put("ESCAPE", actionListener);

    return rootPane2;
  }
    
    
  public static Frame getActiveFrame()
  {
      Frame frame = null;
      Frame[] frames = Frame.getFrames();
      for(Frame f: frames)
      {
          if(f!=null && f.isVisible())
          {
              frame = f;
              break;
          }
              
      }
      return frame;
  }

}
