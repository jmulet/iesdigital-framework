/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * XmlTextField.java
 *
 * Created on 01-abr-2012, 8:55:27
 */
package javar;

import java.awt.Color;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JRadioButton;
import org.iesapp.framework.util.CoreCfg;

/**
 *
 * @author Josep
 */
public class JRDateChooser extends javax.swing.JPanel implements JRComponent {
    private String id = "";
    private boolean required = false;
    private boolean selectable;
    private String selectionFieldName;
    private boolean addtomap;
    private String initialValue;
    private boolean initialSelection;
    private CoreCfg coreCfg;
    
    
    /** Creates new form XmlTextField */
    public JRDateChooser() {
        
        initComponents();
        jRadioButton1.setVisible(selectable);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jRadioButton1 = new javax.swing.JRadioButton();

        setOpaque(false);

        jLabel1.setText("jLabel1");
        jLabel1.setName("jLabel1"); // NOI18N

        jDateChooser1.setName("jDateChooser1"); // NOI18N

        jRadioButton1.setName("jRadioButton1"); // NOI18N
        jRadioButton1.setOpaque(false);
        jRadioButton1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButton1StateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(3, 3, 3))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButton1StateChanged
        if(!selectable) { 
            return;
        } 
        jDateChooser1.setVisible(jRadioButton1.isSelected());
    }//GEN-LAST:event_jRadioButton1StateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRadioButton1;
    // End of variables declaration//GEN-END:variables

    public void setValue(String value) {
          initialValue = value;
          jDateChooser1.setDate(toDate(value));
    }

    public String getValue() {
        return toString(jDateChooser1.getDate());
    }

    public boolean check() {
        boolean check = true;        
        if (required) {
            check = !getValue().trim().isEmpty();
        }
        if(!check)
        {
            jLabel1.setBackground(Color.red);
            jLabel1.setOpaque(true);
        }
        else
        {
            jLabel1.setOpaque(false);
        }
        return check;
    }
    
    
    private java.util.Date toDate(String sdate)
    {
        java.util.Date date = null;
        if(sdate==null || sdate.isEmpty()) {
            return date;
        }
        
        DateFormat formatter = null;
        if(sdate.contains("/")) {
            formatter = new SimpleDateFormat("dd/MM/yyyy");
        }
        else if(sdate.contains("-")) {
            formatter = new SimpleDateFormat("dd-MM-yyyy");
        }
            
        
        if(formatter == null) {
            return null;
        }
        
        try {
            date = (java.util.Date) formatter.parse(sdate);
        } catch (ParseException ex) {
            Logger.getLogger(JRDateChooser.class.getName()).log(Level.SEVERE, null, ex);
        }
        return date;
    }
    
    private String toString(java.util.Date date)
    {
        String str="";
        SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        if(date!=null)
        {    
           str = df.format(jDateChooser1.getDate());
        }
        return str;
    }

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public void setEnable(boolean enabled) {
        jDateChooser1.setEnabled(enabled);
        jRadioButton1.setEnabled(enabled);
    }

    public void focus() {
        jDateChooser1.requestFocusInWindow();
    }

    public void setRequired(boolean required) {
        this.required = required;
    }

    public boolean isRequired() {
        return required;
    }

    public void setLabel(String label) {
        this.jLabel1.setText(label);
    }
    

    public void setSelectable(boolean selectable, String selectionFieldName) {
        this.selectable = selectable;
        this.selectionFieldName = selectionFieldName;
        jRadioButton1.setVisible(selectable);
        if(selectable)
        {
            jDateChooser1.setVisible(jRadioButton1.isSelected());
        }
    }

    public boolean isSelectable() {
       return selectable;
    }

    public JRadioButton getRadioButton() {
        return jRadioButton1;
    }

    public boolean isSelected() {
        return jRadioButton1.isSelected();
    }

    public String getSelectionFieldName() {
        return selectionFieldName;
    }

    public void setSelectionFieldName(String name) {
        this.selectionFieldName = name;
    }
    
    public void setSelected(boolean selected) {
        if(!selectable) {
            return;
        }
        initialSelection = selected;
        jRadioButton1.setSelected(selected);
        jDateChooser1.setVisible(selected);
    }    

    public void setIniParams(HashMap<String,Object> params) {
        if(params.containsKey("allowdays"))
        {
             String allowdays = (String) params.get("allowdays");
             jDateChooser1.getJCalendar().getDayChooser().addDateEvaluator(new org.iesapp.framework.util.FestiusDateEvaluator(null,null,allowdays,coreCfg));
        }
    }
    
    public boolean isAddToMap() {
        return addtomap;
    }

    public void setAddToMap(boolean settomap) {
        addtomap = settomap;
    }

    public boolean hasChanged() {
        return (!(initialValue.equals(this.getValue())) || (initialSelection!=this.isSelected()));
    }
    
    @Override
    public void setCoreCfg(CoreCfg coreCfg) {
        this.coreCfg = coreCfg;
        jDateChooser1.getJCalendar().getDayChooser().addDateEvaluator(new org.iesapp.framework.util.FestiusDateEvaluator(null,null,coreCfg));
    }
}
