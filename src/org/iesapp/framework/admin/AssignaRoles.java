/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AssignaRoles.java
 *
 * Created on 07-jul-2011, 9:55:42
 */

package org.iesapp.framework.admin;

import java.awt.event.ActionEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.InputMap;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JRootPane;
import javax.swing.KeyStroke;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import org.iesapp.framework.admin.cfg.DlgCreaUsuari;
import org.iesapp.framework.table.TextAreaRenderer;
import org.iesapp.framework.util.CoreCfg;
/**
 *
 * @author Josep
 */
public class AssignaRoles extends javar.JRDialog {
    private final ArrayList<String> abrevModified;
    private final DefaultComboBoxModel comboTorn;
    private boolean isListening;
    private DefaultTableModel modelTable1;
    private final CoreCfg coreCfg;
    

    /** Creates new form AssignaRoles */
    public AssignaRoles(java.awt.Frame parent, boolean modal, CoreCfg coreCfg) {
        super(parent, modal);
        this.coreCfg = coreCfg;
        initComponents();

         abrevModified = new ArrayList<String>();
         DefaultComboBoxModel modelCombo = new DefaultComboBoxModel();
         DefaultComboBoxModel comboDepart = new DefaultComboBoxModel();
         comboTorn = new DefaultComboBoxModel();
         comboTorn.addElement("No signable");
         comboTorn.addElement("Matí");
         comboTorn.addElement("Tarda");
         comboTorn.addElement("Matí i tarda");


        String SQL1 = "SELECT DISTINCT grup FROM fitxa_permisos order by grup";
        
        try {
            Statement st = coreCfg.getMysql().createStatement();
            ResultSet rs1 = coreCfg.getMysql().getResultSet(SQL1,st); 
            while (rs1 != null && rs1.next()) {
                String grup = rs1.getString("grup");
                modelCombo.addElement(grup);
            }
            if(rs1!=null) {
                rs1.close();
                st.close();
            }
        } catch (SQLException e) {
            Logger.getLogger(AssignaRoles.class.getName()).log(Level.SEVERE, null, e);
        }

        SQL1 = "SELECT DISTINCT depart FROM sig_professorat order by depart";
        try{
        Statement st2 = coreCfg.getMysql().createStatement();
        ResultSet rs1 = coreCfg.getMysql().getResultSet(SQL1,st2);
        
            while (rs1 != null && rs1.next()) {
                String grup = rs1.getString("depart");
                comboDepart.addElement(grup);
            }
            if(rs1!=null) {
                rs1.close();
                st2.close();
            }
        } catch (SQLException e) {
            Logger.getLogger(AssignaRoles.class.getName()).log(Level.SEVERE, null, e);
        }

        jTable1.getColumnModel().getColumn(4).setCellEditor(new DefaultCellEditor(
             new JComboBox(modelCombo)
             ));

        jTable1.getColumnModel().getColumn(5).setCellEditor(new DefaultCellEditor(
             new JComboBox(comboDepart)
             ));

        jTable1.getColumnModel().getColumn(6).setCellEditor(new DefaultCellEditor(
             new JComboBox(comboTorn)
             ));

      


        modelTable1.addTableModelListener( new TableModelListener()
              {

              public void tableChanged(TableModelEvent e)
               {

                    int mcol = e.getColumn();
                    if(isListening && mcol >1)
                    {
                       int mrow = e.getFirstRow();                        
                        String abrev = (String) jTable1.getValueAt(mrow,0);
                    
                       if(!abrevModified.contains(abrev)) {
                            abrevModified.add(abrev);
                        }
                       ////System.out.println("Canvi per abrev"+abrev);
                   }
              }
      });

        fillTable();
        
        isListening = true;
        }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                if(colIndex <1)
                return false;   //Disallow the editing of any cell
                else
                return true;
            }
        }
        ;
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        jButton3 = new javax.swing.JButton();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        jButton4 = new javax.swing.JButton();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edita Usuaris");

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        modelTable1 = new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Abrev", "idSgd", "Nom", "Contrasenya", "Role", "Departament","Torn"
            }
        );
        jTable1.setModel(modelTable1);
        jTable1.setRowHeight(32);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(200);
        jTable1.getColumnModel().getColumn(2).setCellRenderer(new TextAreaRenderer());
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        jPanel1.setName("jPanel1"); // NOI18N

        jButton2.setText("Cancel");
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);

        filler2.setName("filler2"); // NOI18N
        jPanel1.add(filler2);

        jButton3.setText("Automatic");
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);

        filler4.setName("filler4"); // NOI18N
        jPanel1.add(filler4);

        jButton4.setText("New user");
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);

        filler3.setName("filler3"); // NOI18N
        jPanel1.add(filler3);

        jButton1.setText("Apply and close");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 681, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 681, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    //assignació automàtica
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        String SQL1 = "SELECT DISTINCT prof FROM sig_horaris WHERE asig='TUTA'";
        ArrayList<String> tutors = new ArrayList<String>();
        try {
            Statement st = coreCfg.getMysql().createStatement();
            ResultSet rs1 = coreCfg.getMysql().getResultSet(SQL1,st); 
            while (rs1 != null && rs1.next()) {
                String prof = rs1.getString("prof");
                tutors.add(prof);
            }
            if(rs1!=null) {
                rs1.close();
                st.close();
            }
        } catch (SQLException e) {
            Logger.getLogger(AssignaRoles.class.getName()).log(Level.SEVERE, null, e);
        }

        for(int i=0; i<jTable1.getRowCount(); i++)
        {
            String abrev = (String) jTable1.getValueAt(i, 0);
            if(tutors.contains(abrev))
            {
                jTable1.setValueAt("TUTOR", i, 4);
            }
            else
            {
                jTable1.setValueAt("NOTUTOR", i, 4);
            }
            if(!abrevModified.contains(abrev)) {
                abrevModified.add(abrev);
            }
        }


    }//GEN-LAST:event_jButton3ActionPerformed

    //aplica i tanca
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jTable1.editCellAt(0,0);
        for(int i=0; i<jTable1.getRowCount(); i++)
        {
            String abrev = (String) jTable1.getValueAt(i, 0);
            if(abrevModified.contains(abrev))
            {
                String idSgd = (String) jTable1.getValueAt(i, 1);
                String nom = (String) jTable1.getValueAt(i, 2);
                String contrasenya = (String) jTable1.getValueAt(i, 3);
                String grupfitxes = (String) jTable1.getValueAt(i, 4);
                String depart = (String) jTable1.getValueAt(i, 5);
                String storn = (String) jTable1.getValueAt(i, 6);
                int torn = comboTorn.getIndexOf(storn)-1;

                String SQL1 = "UPDATE usu_usuari SET Contrasenya='"+contrasenya+
                        "', usuari='"+idSgd+"', GrupFitxes='"+grupfitxes+"' WHERE Nom='"+abrev+"'";
               int nup = coreCfg.getMysql().executeUpdate(SQL1);
                                
                SQL1 = "UPDATE sig_professorat SET nombre='"+nom+"', depart='"+depart+"', torn="+torn+", idSGD="+idSgd+" WHERE abrev='"+abrev+"'";
                nup = coreCfg.getMysql().executeUpdate(SQL1);
            }
        }


        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       DlgCreaUsuari dlg = new DlgCreaUsuari(javar.JRDialog.getActiveFrame(), true, coreCfg);
       dlg.setLocationRelativeTo(this);
       dlg.setVisible(true);
       
       fillTable();
    }//GEN-LAST:event_jButton4ActionPerformed

    
    private void fillTable() {
       
       isListening = false;
       
       while(jTable1.getRowCount()>0) {
            modelTable1.removeRow(0);
        }
       
       String SQL1 = "SELECT abrev, idSgd, nombre, Contrasenya, GrupFitxes, depart, torn FROM usu_usuari AS usu INNER JOIN sig_professorat AS prof ON usu.Nom=prof.abrev ORDER BY nombre";
        try {
            Statement st = coreCfg.getMysql().createStatement();
            ResultSet rs1 = coreCfg.getMysql().getResultSet(SQL1,st); 
            while (rs1 != null && rs1.next()) {
                String abrev = rs1.getString(1);
                String idSgd = rs1.getString(2);
                String nombre = rs1.getString(3);
                String pwd = rs1.getString(4);
                String gf = rs1.getString(5);
                String dept = rs1.getString(6);
                int torn = rs1.getInt(7);
                String storn = "No signable";
                if(torn==0)
                {
                    storn="Matí";
                }
                else if(torn==1)
                {
                    storn ="Tarda";
                }
                else if(torn==2)
                {
                    storn="Matí i tarda";
                }
                
                modelTable1.addRow(new Object[]{abrev, idSgd, nombre, pwd, gf, dept, storn});
            }
              if(rs1!=null) {
                rs1.close();
                st.close();
            }
        } catch (SQLException e) {
            Logger.getLogger(AssignaRoles.class.getName()).log(Level.SEVERE, null, e);
        }
         isListening = true;
    }
        
        
        
     @Override
    protected JRootPane createRootPane() {
    JRootPane rootPane2 = new JRootPane();
    KeyStroke stroke = KeyStroke.getKeyStroke("ESCAPE");
    Action actionListener = new AbstractAction() {
        @Override
      public void actionPerformed(ActionEvent actionEvent) {
        setVisible(false);
      }
    } ;
    InputMap inputMap = rootPane2.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
    inputMap.put(stroke, "ESCAPE");
    rootPane2.getActionMap().put("ESCAPE", actionListener);

    return rootPane2;
  }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
 

}
