/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ImportarFotos.java
 *
 * Created on 18-jun-2011, 12:27:41
 */

package org.iesapp.framework.admin;


import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.DefaultListModel;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JRootPane;
import javax.swing.KeyStroke;
import javax.swing.Timer;
import javax.swing.filechooser.FileNameExtensionFilter;
import jxl.Cell;
import jxl.CellType;
import jxl.LabelCell;
import jxl.NumberCell;
import jxl.Sheet;
import jxl.Workbook;
import jxl.WorkbookSettings;
import jxl.read.biff.BiffException;
import org.iesapp.framework.dialogs.CercadorDB;
import org.iesapp.framework.util.CoreCfg;
import org.iesapp.util.StringUtils;
/**
 *
 * @author Josep
 */
public class ImportarNotes extends javar.JRDialog {
    private final DefaultListModel listModel1;
    private String path=null;
    private String directory;
    private int currentExp=0;
    private final Timer timer;
    private final int AnimationRate=1000;
    private LongTask task;
    private final CoreCfg coreCfg;

    /** Creates new form ImportarFotos */
    public ImportarNotes(java.awt.Frame par, boolean modal, CoreCfg coreCfg) {
        super(par, modal);
        this.coreCfg = coreCfg;
        initComponents();
        listModel1 = new DefaultListModel();
        jList1.setModel(listModel1);

         timer = new javax.swing.Timer(AnimationRate, new
                ActionListener() {
                         public void actionPerformed(ActionEvent e) {
                                 if(task!=null && task.isAlive())
                                 {
                                    jButton3.setEnabled(false);
                                    jButton4.setEnabled(false);
                                 }
                                 else
                                 {
                                    jButton3.setEnabled(true);
                                    jButton4.setEnabled(true);
                                    jProgressBar1.setIndeterminate(false);
                                    timer.stop();
                                 }
                         }
         });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Importaci√≥ de dades d'alumnes");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText(".xls files of evaluations generaded by xestib");

        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jList1);

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Log");

        jTextArea1.setBackground(new java.awt.Color(204, 204, 204));
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jButton3.setText("Import");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Close");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Do update if student already exists in database");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jCheckBox1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Add new File to the List
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
             "Fitxers Excel", "xls");

        chooser.setMultiSelectionEnabled(true);
        chooser.setFileFilter(filter);
        if(directory==null) {
            directory = ".";
        }

        chooser.setCurrentDirectory(new File(directory));
        int returnVal = chooser.showOpenDialog(javar.JRDialog.getActiveFrame());
        if(returnVal == JFileChooser.APPROVE_OPTION)
        {
        
        File[] selectedFiles = chooser.getSelectedFiles();
        for(int i=0; i<selectedFiles.length; i++)
        {
            listModel1.addElement(selectedFiles[i].getPath());
            directory = selectedFiles[i].getAbsolutePath();
        }
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    //Esborra el selected file
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int id = jList1.getSelectedIndex();
        if(id>=0) {
            listModel1.remove(id);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
      this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    //Importa
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTextArea1.removeAll();
        timer.start();
        task = new LongTask();
        task.start();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if(task!=null && task.isAlive())
        {
                task.interrupt();
                timer.stop();
        }
        this.dispose();
    }//GEN-LAST:event_formWindowClosing


    class LongTask extends Thread
    {
        public double inc;
        public double status;

        public void run()
        {
               inc = 100./(1.0*listModel1.size());

               for(Object ruta: listModel1.toArray())
                {
                    parseXls((String) ruta);
                }
                jProgressBar1.setValue(100);

        }


        private void parseXls(String ruta) {

        jTextArea1.append("*Parsing xestib2.0 .xls file "+ ruta+"\n");
        jTextArea1.append(" ---\n");

       try
        {
            WorkbookSettings ws = new WorkbookSettings();
            ws.setLocale(new Locale("ca", "ES"));
            //ws.setEncoding("UTF8");
            ws.setEncoding("ISO-8859-1");

           //jTextArea1.append(ruta);
            Workbook workbook = Workbook.getWorkbook(new File(ruta),ws);
            Sheet s  = workbook.getSheet(0);

          // jTextArea1.append("dimensions "+s.getColumns()+"; " + s.getRows());

            double step = inc/(1.0+s.getRows());
            int col1 = -1;
            int col2 = -1;

            int curs = 0;
            String nivell = "";
            String grup = "";
            String any =  "";

            for(int row=0; row<s.getRows(); row++) //
            {
                  String valor="";
                  Cell acell = s.getCell(0,row);
                  CellType type = acell.getType();
                  if(type.equals(CellType.LABEL))
                  {
                      LabelCell dc = (LabelCell) acell;
                      valor = dc.getString();
                  }

                  ////System.out.println("Fila"+row+", nom="+valor+  " col1,col2="+col1+","+col2);
                  if(valor.contains("Grup"))
                  {
                     String valor2="";
                     Cell acell2 = s.getCell(0,row);
                     CellType type2 = acell2.getType();
                     if(type2.equals(CellType.LABEL))
                     { 
                        LabelCell dc = (LabelCell) acell2;
                        valor2 = dc.getString();
                        grup = StringUtils.AfterLast(valor2, ":").trim();
                        jTextArea1.append("Detectat grup: "+grup+"\n");
                     }
                  }

                  if(valor.contains("d'educa"))
                  {
                     String valor2="";
                     Cell acell2 = s.getCell(0,row);
                     CellType type2 = acell2.getType();
                     if(type2.equals(CellType.LABEL))
                     {
                        LabelCell dc = (LabelCell) acell2;
                        valor2 = dc.getString();
                        nivell = "ESO";
                        curs = (int) Double.parseDouble(valor2.trim().substring(0,1));
                        jTextArea1.append("Detectat curs/nivell: "+curs+" / "+nivell+"\n");
                     }
                  }


                  if(valor.contains("Batxillerat") && !valor.equals("Batxillerat"))
                  {
                     String valor2="";
                     Cell acell2 = s.getCell(0,row);
                     CellType type2 = acell2.getType();
                     if(type2.equals(CellType.LABEL))
                     {
                        LabelCell dc = (LabelCell) acell2;
                        valor2 = dc.getString();
                        nivell = "BATX";
                        curs = (int) Double.parseDouble(valor2.trim().substring(0,1));
                        jTextArea1.append("Detectat curs/nivell: "+curs+" / "+nivell+"\n");
                     }
                  }

                  if(valor.contains("Any"))
                  {
                     String valor2="";
                     Cell acell2 = s.getCell(0,row);
                     CellType type2 = acell2.getType();
                     if(type2.equals(CellType.LABEL))
                     {
                        LabelCell dc = (LabelCell) acell2;
                        valor2 = dc.getString();

                        any = StringUtils.AfterLast(valor2, ":");
                        any = StringUtils.BeforeLast(any, "-").trim();
                        jTextArea1.append("Detectat any: "+any+"\n");
                     }
                  }

                  if(valor.equals("Alumne/a"))
                  {
                    for(int col=0; col<s.getColumns(); col++)
                    {

                           Cell acell2 = s.getCell(col,row);
                           CellType type2 = acell2.getType();
                           if(type2.equals(CellType.LABEL))
                           {
                              LabelCell dc2 = (LabelCell) acell2;
                              String aux = dc2.getString();
                              if(aux.equals("Susp.")) {
                                    col1 = col;
                                }
                              if(aux.equals("Mit.")) {
                                    col2 = col;
                                }
                             // jTextArea1.append("Detectats posicions susp., mit.: "+col1+", "+col2+"\n");
                           }
                    }
                  }

                   String llinatge1="";
                   String llinatge2="";
                   String nom1="";
                   int nsusp = 0;
                   double nota = 0.0;

                  if(col1>0 && col2>0) //comen√ßa
                  {
                       Cell acell2 = s.getCell(0,row);
                       CellType type2 = acell2.getType();
                       if(type2.equals(CellType.LABEL))
                       {
                              LabelCell dc = (LabelCell) acell2;
                              String alumne = dc.getString();
                              alumne=alumne.replaceAll("(Repetidor/a)", "");
                              alumne=alumne.replace('(', ' ');
                              alumne=alumne.replace(')', ' ').trim();

                              nom1 = StringUtils.AfterLast(alumne, ",").trim();
                              String llinatges = StringUtils.BeforeLast(alumne, ",").trim();
                              llinatge1 = StringUtils.BeforeLast(llinatges, " ");
                              if(llinatge1.isEmpty()) {
                                llinatge1 = llinatges;
                            }
                              else {
                                llinatge2 = StringUtils.AfterLast(llinatges, " ");
                            }

                      }

                      acell2 = s.getCell(col1,row);
                      type2 = acell2.getType();
                      if(type2.equals(CellType.NUMBER))
                      {
                        NumberCell dc = (NumberCell) acell2;
                        nsusp = (int) dc.getValue();
                      }


                      acell2 = s.getCell(col2,row);
                      type2 = acell2.getType();
                      if(type2.equals(CellType.NUMBER))
                      {
                        NumberCell dc = (NumberCell) acell2;
                        nota = (double) dc.getValue();
                      }

                      if(nota>0)
                      {

                         String SQL1 = "SELECT Exp2 FROM `"+CoreCfg.core_mysqlDBPrefix+"`.xes_alumne WHERE Llinatge1='"+llinatge1+
                                "' AND Llinatge2='"+llinatge2+"' AND Nom1='"+nom1+"'";
                        
                        int results = 0;
                        int expd = 0;
                        try {
                            Statement st = coreCfg.getMysql().createStatement();
                            ResultSet rs1 = coreCfg.getMysql().getResultSet(SQL1,st); 
                                while (rs1 != null && rs1.next()) {
                                    expd = rs1.getInt("Exp2");
                                    results+=1;
                                }
                                if(rs1!=null)
                                {
                                    rs1.close();
                                    st.close();
                                }
                            } catch (SQLException ex) {
                                Logger.getLogger(ImportarNotes.class.getName()).log(Level.SEVERE, null, ex);
                            }

                        if(results==1)
                        {


                              //Fa l'update
                               String SQL2 = "UPDATE `"+CoreCfg.core_mysqlDBPrefix+"`.fitxa_alumne_curs SET NumMateriesSuspJuny='"+nsusp+"', NotaMitjaFinal='"+nota+
                                       "' WHERE Exp_FK_ID="+expd+" AND IdCurs_FK_ID='"+any+"'";

                              // //System.out.println(SQL1);

                               int nup = coreCfg.getMysql().executeUpdate(SQL2);

                               if(nup>0)
                               {
                                    jTextArea1.append("OK->"+expd+","+llinatge1+"|"+llinatge2+"|"+nom1+"::"+nsusp+","+nota+"\n");
                               }
                               else
                               {
                                    jTextArea1.append("ERROR->"+expd+","+llinatge1+"|"+llinatge2+"|"+nom1+"::"+nsusp+","+nota+"\n");
                               }
                        }
                        else
                        {
                            //ha de donar la possibilitat de triar a ma l'alumne
                            CercadorDB dlg = new CercadorDB(javar.JRDialog.getActiveFrame(), true, coreCfg.getMysql(), SQL1, "NO ES TROBA :: "+llinatge1+"|"+llinatge2+"|"+nom1+"::"+nsusp+","+nota+"\n");
                            dlg.setLocationRelativeTo(null);
                            dlg.setVisible(true);
                            String newQuery = dlg.newquery;
                            dlg.dispose();

                            if(!newQuery.isEmpty())
                            {
                                  Statement st2 = null;
                                  ResultSet rs2 = coreCfg.getMysql().getResultSet2(newQuery,st2);

                                 int results2 = 0;
                                 int expd2 = 0;
                                 try {
                                    while (rs2 != null && rs2.next()) {
                                        expd2 = rs2.getInt("Exp2");
                                        results2+=1;
                                    }
                                    if(rs2!=null) {
                                         rs2.close();
                                         st2.close();
                                     }
                                 } catch (SQLException ex) {
                                    Logger.getLogger(ImportarNotes.class.getName()).log(Level.SEVERE, null, ex);
                                 }

                                     if(results2==1)
                                     {
                                           String SQL2 = "UPDATE `"+CoreCfg.core_mysqlDBPrefix+"`.fitxa_alumne_curs SET NumMateriesSuspJuny='"+nsusp+"', NotaMitjaFinal='"+nota+
                                            "' WHERE Exp_FK_ID="+expd2+" AND IdCurs_FK_ID='"+any+"'";
                                          int nup2 = coreCfg.getMysql().executeUpdate(SQL2);
                                          if(nup2==0) {
                                            jTextArea1.append("ERROR->"+llinatge1+"|"+llinatge2+"|"+nom1+"::"+nsusp+","+nota+"\n");
                                        }
                                          else {
                                            jTextArea1.append("OK->"+llinatge1+"|"+llinatge2+"|"+nom1+"::"+nsusp+","+nota+"\n");
                                        }
                                    }
                                    else
                                    {
                                            jTextArea1.append("ERROR->"+llinatge1+"|"+llinatge2+"|"+nom1+"::"+nsusp+","+nota+"\n");
                                    }
                                }
                                else
                                {
                                    jTextArea1.append("ERROR->"+llinatge1+"|"+llinatge2+"|"+nom1+"::"+nsusp+","+nota+"\n");
                                }
                        }

                      }

                }



              status +=step;
              jProgressBar1.setValue((int) status);

            }


          jTextArea1.append(">Fi del grup: "+nivell+", "+curs+"-"+grup+"\n");

          workbook.close();
        }
        catch (IOException e)
        {
        }
        catch (BiffException e)
        {
        }
 

        }

    }


     @Override
    protected JRootPane createRootPane() {
    JRootPane rootPane2 = new JRootPane();
    KeyStroke stroke = KeyStroke.getKeyStroke("ESCAPE");
    Action actionListener = new AbstractAction() {
      public void actionPerformed(ActionEvent actionEvent) {
        setVisible(false);
      }
    } ;
    InputMap inputMap = rootPane2.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
    inputMap.put(stroke, "ESCAPE");
    rootPane2.getActionMap().put("ESCAPE", actionListener);

    return rootPane2;
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jList1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

  
}
