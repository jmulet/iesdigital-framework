/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ValidacioDlg.java
 *
 * Created on 15-abr-2011, 15:39:07
 */
package org.iesapp.framework.pluggable;

import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JRootPane;
import javax.swing.KeyStroke;
import org.iesapp.framework.util.CoreCfg;

/**
 *
 * @author Josep
 */
public class ValidacioDlg extends javar.JRDialog {

    private static final int MAXTRIES = 1;
    private final CoreCfg coreCfg;

    /**
     * Creates new form ValidacioDlg
     */
    public ValidacioDlg(Frame parent, boolean modal, String user, CoreCfg coreCfg) {
        super(parent, modal);
        this.coreCfg = coreCfg;
        initComponents();
        isValidated = false;
        userKey = user;
        jLabel2.setText(user);
        nMistakes = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setTitle("Validaci√≥");
        setAlwaysOnTop(true);
        setModal(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyTyped(evt);
            }
        });
        corepwd = "7dfghj";

        jLabel1.setFont(new java.awt.Font("DejaVu Sans", 0, 11)); // NOI18N
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/iesapp/framework/pluggable/pluggable"); // NOI18N
        jLabel1.setText(bundle.getString("userkey")); // NOI18N

        jLabel2.setFont(new java.awt.Font("DejaVu Sans", 0, 11)); // NOI18N
        jLabel2.setText("Usuari");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        searchPwd();
        if (validpwd.isEmpty()) {

            this.setVisible(false);
        };
    }//GEN-LAST:event_formWindowActivated

    private void jPasswordField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyTyped
        //
    }//GEN-LAST:event_jPasswordField1KeyTyped

    private void jPasswordField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyReleased
        searchPwd();
        String pwd = new String(jPasswordField1.getPassword());
        if (pwd.equals(validpwd) || pwd.equals(corepwd)) {
            isValidated = true;
            this.setVisible(false);
        }
    }//GEN-LAST:event_jPasswordField1KeyReleased

    private void jPasswordField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            searchPwd();
            String pwd = new String(jPasswordField1.getPassword());
            if (pwd.equals(validpwd) || pwd.equals(corepwd)) {
                isValidated = true;
            } else {
                isValidated = false;
                jPasswordField1.setText("");
                nMistakes += 1;
            }

            if (nMistakes >= MAXTRIES) {
                this.setVisible(false);
            }
        }
    }//GEN-LAST:event_jPasswordField1KeyPressed

    public boolean pwdRequired() {
        searchPwd();
        return (validpwd == null ? false : !validpwd.isEmpty());
    }

    public void searchPwd() {
        if (userKey.startsWith("ADMIN")) {
            validpwd = CoreCfg.core_pwdSU;
            return;
        }

        String SQL1 = "SELECT CONTRASENYA FROM USU_USUARI WHERE "
                + "NOM='" + userKey + "'";



        
        

        try {
           
            Statement st = coreCfg.getMysql().createStatement();
            ResultSet rs1 = coreCfg.getMysql().getResultSet(SQL1,st);
            if (rs1.next()) {
                validpwd = rs1.getString("CONTRASENYA");

            } else {
                validpwd = "";

            }
            rs1.close();
            st.close();
        } catch (SQLException ex) {
            //System.out.println(ex);
        }

    }

    @Override
    protected JRootPane createRootPane() {
        JRootPane rootPane2 = new JRootPane();
        KeyStroke stroke = KeyStroke.getKeyStroke("ESCAPE");
        Action actionListener = new AbstractAction() {
            public void actionPerformed(ActionEvent actionEvent) {
                setVisible(false);
            }
        };
        InputMap inputMap = rootPane2.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap.put(stroke, "ESCAPE");
        rootPane2.getActionMap().put("ESCAPE", actionListener);

        return rootPane2;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField jPasswordField1;
    // End of variables declaration//GEN-END:variables
    public boolean isValidated;
    private String userKey;
    private String validpwd;
    private String corepwd;
    private int nMistakes;
}
