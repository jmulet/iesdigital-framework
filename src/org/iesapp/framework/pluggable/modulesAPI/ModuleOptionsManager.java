/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.iesapp.framework.pluggable.modulesAPI;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.DefaultListModel;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import org.iesapp.framework.util.CoreCfg;
import org.iesapp.util.StringUtils;

/**
 *
 * @author Josep
 */
public class ModuleOptionsManager extends javar.JRDialog {
    private DefaultTableModel modelTable1;
    private final BeanModule bean;
    private final GenericFactory genericFactory;
    private final boolean isrequired;
    private final DefaultListModel modelList1;
    private final CoreCfg coreCfg;
    private final DefaultListModel modelList2;
    private boolean listening = false;


    /**
     * Creates new form OptionsManager
     */
    public ModuleOptionsManager(java.awt.Frame parent, boolean modal, BeanModule bean, final GenericFactory genericFactory,
            boolean isrequired, CoreCfg coreCfg) {
        super(parent, modal);
        this.coreCfg = coreCfg;
        initComponents();
        this.bean = bean;
        this.genericFactory = genericFactory;
        this.isrequired = isrequired;
        ButtonGroup group1 = new ButtonGroup();
        group1.add(jRadioButton1);
        group1.add(jRadioButton2);
        
        ButtonGroup group2 = new ButtonGroup();
        group2.add(jRadioButton3);
        group2.add(jRadioButton4);
        
        if(bean.getModuleType()!=BeanModule.MODULETYPE_STD)
        {
            jComboBox1.setEnabled(false);
            jComboBox2.setEnabled(false);
            jComboBox3.setEnabled(false);
        }
        
        modelTable1.addTableModelListener(new TableModelListener(){
               
                    @Override
                    public void tableChanged(TableModelEvent e) {
                        int row = jTable1.getSelectedRow();
                        //System.out.println("!!!!!! JTABLE1::::::: " +row);
                        if(!listening  || row<0)
                        {
                            return;
                        }
                        
                        String key = (String) jTable1.getValueAt(row, 0);
                        String value = (String) jTable1.getValueAt(row, 1);
                       // //System.out.println("!!!!!! key-value::::::: " +key+" "+value);
                        genericFactory.setModuleInitializationAttribute(key, value);
                    }
            
        });
        
        //Create model for roles list
        modelList1 = new DefaultListModel();
        String SQL1 = "SELECT DISTINCT grup FROM fitxa_permisos order by grup";
        modelList1.addElement("*");
       
        try {
            Statement st = coreCfg.getMysql().createStatement();
            ResultSet rs1 = coreCfg.getMysql().getResultSet(SQL1,st);
            while(rs1!=null && rs1.next())
            {
                 modelList1.addElement(rs1.getString(1));                    
            }
            if(rs1!=null) {
                rs1.close();
                st.close();
            }
        } catch (SQLException ex) {
            Logger.getLogger(ModuleOptionsManager.class.getName()).log(Level.SEVERE, null, ex);
        }
        jList1.setModel(modelList1);
        
        
        //Create a model for users
        modelList2 = new DefaultListModel();
        SQL1 = "SELECT nombre, abrev FROM sig_professorat ORDER BY nombre";
        try {
            Statement st = coreCfg.getMysql().createStatement();
            ResultSet rs1 = coreCfg.getMysql().getResultSet(SQL1,st);
            while(rs1!=null && rs1.next())
            {
                modelList2.addElement(rs1.getString(1)+" ["+rs1.getString(2)+"]");                    
            }
            if(rs1!=null) {
                rs1.close();
                st.close();
            
            }
        } catch (SQLException ex) {
            Logger.getLogger(ModuleOptionsManager.class.getName()).log(Level.SEVERE, null, ex);
        }
        jList2.setModel(modelList2);
        
        
        
        updateUI();
    }

    
     /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int col)
            {
                return col==1;
            }
        };
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Module configuration");

        jLabel5.setText("Initialization");

        modelTable1  = new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {
                "key", "value", "type", "description"
            }
        );
        jTable1.setModel(modelTable1);
        jTable1.setRowHeight(32);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("AutoStart");

        jLabel4.setText("Shortcut");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "no", "yes", "onDemand" }));

        jLabel3.setText("Multiple instances");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "no", "yes" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "no", "yes" }));

        jLabel2.setText("Closable");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(5, 5, 5)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(2, 2, 2)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Include");

        jRadioButton2.setText("Exclude");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton2)
                        .addGap(0, 376, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addGap(4, 4, 4)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                .addGap(3, 3, 3))
        );

        jTabbedPane1.addTab("Roles", jPanel2);

        jRadioButton3.setSelected(true);
        jRadioButton3.setText("Include");

        jRadioButton4.setText("Exclude");

        jList2.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jList2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jRadioButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton4)
                        .addGap(0, 378, Short.MAX_VALUE))
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton4)
                    .addComponent(jRadioButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Individual users", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(9, 9, 9))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addGap(2, 2, 2)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        genericFactory.setModuleAttribute("autoStart", (String) jComboBox1.getSelectedItem());
        genericFactory.setModuleAttribute("closable", (String) jComboBox2.getSelectedItem());
        genericFactory.setModuleAttribute("multipleInstances", (String) jComboBox3.getSelectedItem());
        genericFactory.setModuleAttribute("shortcut", jTextField1.getText());
        
        
        //UPDATE field roles
        String roles = "";
        if(jRadioButton2.isSelected())
        {
            roles += "-";
        }
        if (jList1.isSelectedIndex(0)) {
            roles += "*";
        } else {
            for (int i = 0; i < modelList1.getSize(); i++) {
                if (jList1.isSelectedIndex(i)) {
                    roles += modelList1.getElementAt(i) + ",";
                }
            }
        }
        if(jList1.getSelectedIndices().length==0)
        {
            roles = "*";
        }
        genericFactory.setModuleAttribute("roles", roles);
        
  
        //////////////////////////Update field users
        String users = "";
        if(jRadioButton4.isSelected())
        {
            users += "-";
        }

        for (int i = 0; i < modelList2.getSize(); i++) {
            if (jList2.isSelectedIndex(i)) {
                String abrev = StringUtils.AfterLast((String) modelList2.getElementAt(i),"[");
                abrev = StringUtils.BeforeFirst(abrev, "]");
                users += abrev + ",";
            }
        }

        if(jList2.getSelectedIndices().length!=0)
        {
            genericFactory.setModuleAttribute("users", users);
        }
        else
        {
            genericFactory.removeModuleAttribute("users");
        }
        
  
        
        //////////////////////////
        
        for(int i=0; i<jTable1.getRowCount(); i++)
        {
            String key = (String) jTable1.getValueAt(i, 0);
            String value = (String) jTable1.getValueAt(i, 1);
            //String type = (String) jTable1.getValueAt(i, 2);
               
            genericFactory.setModuleInitializationAttribute(key, value);
        
        }    
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void updateUI() {
        if(bean.getAutoStart()==BeanModule.NO)
        {
            jComboBox1.setSelectedItem("no");
        }
        else if(bean.getAutoStart()==BeanModule.YES)
        {
            jComboBox1.setSelectedItem("yes");
        }
        else if(bean.getAutoStart()==BeanModule.ONDEMAND)
        {
            jComboBox1.setSelectedItem("onDemand");
        }
        
        
        jComboBox1.setEnabled(!isrequired);
        jComboBox2.setEnabled(!isrequired);
        jRadioButton1.setEnabled(!isrequired);
        jRadioButton2.setEnabled(!isrequired);
        jList1.setEnabled(!isrequired);
        
        ///////////////////////////////////////////////////////
        
        jComboBox2.setSelectedItem(bean.isClosable()?"yes":"no");
        jComboBox3.setSelectedItem(bean.isMultipleInstance()?"yes":"no");
        
        ///////////////////////////////////////////////////////
        
        jTextField1.setText(bean.getShortcut());
        
        ///////////////////////////////////////////////////////Actualiza llista roles
        
        String tmp = bean.getRoles();
        if (bean.getRoles().startsWith("-") || bean.getRoles().startsWith("+")) {
            tmp = bean.getRoles().substring(1);
        }
        if (bean.getRoles().startsWith("-")) {
            jRadioButton2.setSelected(true);
        }
        ArrayList<String> parsed = StringUtils.parseStringToArray(tmp, ",", StringUtils.CASE_INSENSITIVE);
        int[] idxs = new int[parsed.size()];
        int i=0;
        for (String s : parsed) {
            int id =  modelList1.indexOf(s);
            idxs[i] = id;
            i += 1;
        }
        jList1.setSelectedIndices(idxs);
        
        
        ////////////////////////////////////////////////////Actualitza llista usuaris
     
        tmp = bean.getUsers();
        if (bean.getUsers().startsWith("-") || bean.getUsers().startsWith("+")) {
            tmp = bean.getRoles().substring(1);
        }
        if (bean.getUsers().startsWith("-")) {
            jRadioButton4.setSelected(true);
        }
        
        parsed = StringUtils.parseStringToArray(tmp, ",", StringUtils.CASE_INSENSITIVE);
        int[] idxs2 = new int[parsed.size()];
        i=0;
        for (String s : parsed) {
            for(int j=0; j<modelList2.getSize(); j++)
            {
                String get = (String) modelList2.get(j);
                if(get.contains("["+s+"]"))
                {
                    idxs2[i] = j;
                    i += 1;
                    break;
                }
                
            }
            
          
        }
        jList2.setSelectedIndices(idxs2);
     
        ///////////////////////////////////////////////////////
        listening = false;
        while(jTable1.getRowCount()>0)
        {
            modelTable1.removeRow(0);
        }
        
        for(String key: bean.getIniParameters().keySet())
        {
            Object obj = bean.getIniParameters().get(key);
            String value = obj.toString();
            if(obj instanceof Boolean)
            {
                value = ((Boolean) obj)?"yes":"no";
            }
            
            modelTable1.addRow(new Object[]{key, value, value.getClass().getSimpleName(), 
                StringUtils.noNull(bean.getIniParametersDescription().get(key))});
        }
        listening = true;
    }
}
