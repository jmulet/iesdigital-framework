/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CercadorDB.java
 *
 * Created on 09-jul-2011, 10:14:19
 */

package org.iesapp.framework.dialogs;
 
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import org.iesapp.database.MyDatabase;
import org.iesapp.util.StringUtils;

/**
 *
 * @author Josep
 */
public class CercadorDB extends javar.JRDialog {
    private  String origquery="";
    public  String newquery="";
    private  MyDatabase mysql;
    private DefaultTableModel modelTable1;
    public boolean silent = false;

    /** Creates new form CercadorDB */
    public CercadorDB(java.awt.Frame parent, boolean modal, MyDatabase con, String query, String msg) {
        super(parent, modal);
        origquery = query;
        initComponents();

        jMsg.setText(msg);
        mysql = con;
        jQuery.setText(query);
        fillTable(query);


        jTable1.setIntercellSpacing(new java.awt.Dimension(2, 2));
        jTable1.setGridColor(java.awt.Color.gray);
        jTable1.setShowGrid(true);

        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jQuery = new javax.swing.JTextArea();
        jMsg = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setTitle("Cercador de bases de dades");

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jQuery.setColumns(20);
        jQuery.setRows(5);
        jQuery.setName("jQuery"); // NOI18N
        jScrollPane1.setViewportView(jQuery);

        jMsg.setBackground(new java.awt.Color(204, 204, 204));
        jMsg.setEditable(false);
        jMsg.setFont(new java.awt.Font("Tahoma", 1, 11));
        jMsg.setForeground(new java.awt.Color(255, 0, 0));
        jMsg.setName("jMsg"); // NOI18N

        jLabel1.setText("Missatge");
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText("Query");
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText("Resultat");
        jLabel3.setName("jLabel3"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.setRowHeight(32);
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane2.setViewportView(jTable1);

        jButton2.setText("Executa Query");
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setName("jLabel4"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 25, 5));

        jButton1.setText("CancelÂ·la");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        jButton4.setText("No tornis a demanar");
        jButton4.setName("jButton4"); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);

        jButton3.setText("Utiliza la nova query");
        jButton3.setName("jButton3"); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 618, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jMsg, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(254, 254, 254)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jMsg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        newquery = "";
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String txt = jQuery.getText();
        txt.replaceAll("\n", " ");

        fillTable(txt);


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        newquery = jQuery.getText();
        newquery.replaceAll("\n", " ");
        this.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        silent = true;
        this.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jMsg;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextArea jQuery;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void fillTable(String txt) {

        txt = txt.replaceAll("select", "SELECT");
        txt = txt.replaceAll("from", "FROM");
        txt = txt.replaceAll("where", "WHERE");




        String txt2 = "";
        if(txt.toUpperCase().contains("WHERE")) {
            txt2 = StringUtils.BeforeLast(txt, "WHERE");
        }
        else {
            txt2 = txt;
        }

        txt2 = StringUtils.AfterLast(txt2.toUpperCase(), "FROM");


        String camps = StringUtils.AfterFirst(txt, "SELECT");
        camps = StringUtils.BeforeFirst(camps, "FROM").trim();

     

        ArrayList<String> useOnly=new ArrayList<String>();

        boolean isfilter;
        if(!camps.isEmpty() && !camps.equals("*"))
        {
                useOnly=StringUtils.parseStringToArray(camps, ",", StringUtils.CASE_INSENSITIVE);
                isfilter = true;
               
        }
        else
        {
            isfilter = false;
        }

//         for(int i=0; i<useOnly.size();i++)
//                       //System.out.println("useonly::#"+useOnly.get(i)+"#");



        String query_columns = "SHOW COLUMNS FROM " + txt2.trim();

        //System.out.println(query_columns);

        ArrayList<String> labels = new  ArrayList<String>();
        ArrayList<String> types = new  ArrayList<String>();

        //determina el nombre de columnes de la consulta
        try{
        Statement st = mysql.createStatement();
        ResultSet rs1 = mysql.getResultSet(query_columns+";",st);
        
            while (rs1 != null && rs1.next()) {
                   String field = rs1.getString("Field");
                   String type = rs1.getString("Type");
                  // //System.out.println("camps detectats: "+field+"; "+type);

                   if(!isfilter || (useOnly.size()>0 && useOnly.contains(field)))
                   {
                    labels.add(field);
                    types.add(type);
                   }

            }
            if(rs1!=null) {
                rs1.close();
                st.close();
            }
        } catch (SQLException ex) {
            Logger.getLogger(CercadorDB.class.getName()).log(Level.SEVERE, null, ex);
        }

//         for(int i=0; i<labels.size();i++)
//                       //System.out.println("camps::#"+labels.get(i)+"#");



      //Crea un model per la taulaprivate void createTableModel()
//System.out.println("crea model");
      modelTable1 = new DefaultTableModel(
                new Object [][] {
            },
            labels.toArray());
        jTable1.setModel(modelTable1);


//System.out.println("execute "+txt);

      int nresult = 0;
     
      try {
           Statement st2 = mysql.createStatement();
           ResultSet rs1 = mysql.getResultSet(txt,st2);
            while (rs1 != null && rs1.next()) {

                Object[] fila = new Object[labels.size()];

                for(int i=0; i< labels.size(); i++)
                {
                    String field = labels.get(i);
                    String tipo = types.get(i);
                    Object val = "";
                    if(tipo.contains("char") || tipo.contains("longtext"))
                    {
                        val = rs1.getString(field);
                    }
                    else if(tipo.equals("int"))
                    {
                        val = rs1.getInt(field);
                    }
                    else if(tipo.equals("date"))
                    {
                        val = rs1.getDate(field);
                    }
                    else if(tipo.equals("datetime"))
                    {
                       // val = rs1.getTimestamp(field);
                    }
                   
                    fila[i] = val;
                }

                modelTable1.addRow(fila);
                nresult +=1;
            }
            if(rs1!=null) {
              rs1.close();
              st2.close();
          }
        } catch (SQLException ex) {
            Logger.getLogger(CercadorDB.class.getName()).log(Level.SEVERE, null, ex);
        }

        jLabel4.setText("S'han trobat "+nresult+" resultats.");
    }



}
